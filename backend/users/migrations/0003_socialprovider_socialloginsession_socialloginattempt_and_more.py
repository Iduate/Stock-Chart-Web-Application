# Generated by Django 4.2.24 on 2025-09-19 17:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0002_user_subscription_expiry'),
    ]

    operations = [
        migrations.CreateModel(
            name='SocialProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('google', 'Google'), ('facebook', 'Facebook'), ('naver', 'Naver'), ('kakao', 'Kakao'), ('apple', 'Apple'), ('github', 'GitHub'), ('twitter', 'Twitter')], max_length=20, unique=True, verbose_name='제공업체명')),
                ('display_name', models.CharField(max_length=50, verbose_name='표시명')),
                ('client_id', models.CharField(max_length=255, verbose_name='클라이언트 ID')),
                ('client_secret', models.CharField(blank=True, max_length=255, verbose_name='클라이언트 시크릿')),
                ('authorization_url', models.URLField(verbose_name='인증 URL')),
                ('token_url', models.URLField(verbose_name='토큰 URL')),
                ('user_info_url', models.URLField(verbose_name='사용자 정보 URL')),
                ('scope', models.TextField(help_text='쉼표로 구분된 권한 목록', verbose_name='스코프')),
                ('icon_url', models.URLField(blank=True, verbose_name='아이콘 URL')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
            ],
            options={
                'verbose_name': '소셜 제공업체',
                'verbose_name_plural': '소셜 제공업체들',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SocialLoginSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=255, unique=True, verbose_name='세션 키')),
                ('access_token', models.TextField(verbose_name='액세스 토큰')),
                ('refresh_token', models.TextField(blank=True, verbose_name='리프레시 토큰')),
                ('expires_at', models.DateTimeField(verbose_name='만료일')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP 주소')),
                ('user_agent', models.TextField(blank=True, verbose_name='사용자 에이전트')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('last_accessed_at', models.DateTimeField(auto_now=True, verbose_name='마지막 접근일')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.socialprovider')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '소셜 로그인 세션',
                'verbose_name_plural': '소셜 로그인 세션들',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialLoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_id', models.CharField(blank=True, max_length=255, verbose_name='소셜 ID')),
                ('status', models.CharField(choices=[('pending', '대기중'), ('success', '성공'), ('failed', '실패'), ('cancelled', '취소')], default='pending', max_length=20, verbose_name='상태')),
                ('state_token', models.CharField(max_length=255, unique=True, verbose_name='상태 토큰')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP 주소')),
                ('user_agent', models.TextField(blank=True, verbose_name='사용자 에이전트')),
                ('error_message', models.TextField(blank=True, verbose_name='오류 메시지')),
                ('extra_data', models.JSONField(blank=True, default=dict, verbose_name='추가 데이터')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='완료일')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.socialprovider')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '소셜 로그인 시도',
                'verbose_name_plural': '소셜 로그인 시도들',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialConnectRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_id', models.CharField(max_length=255, verbose_name='소셜 ID')),
                ('social_email', models.EmailField(blank=True, max_length=254, verbose_name='소셜 이메일')),
                ('social_name', models.CharField(blank=True, max_length=100, verbose_name='소셜 이름')),
                ('status', models.CharField(choices=[('pending', '대기중'), ('approved', '승인'), ('rejected', '거부'), ('expired', '만료')], default='pending', max_length=20, verbose_name='상태')),
                ('verification_token', models.CharField(max_length=255, unique=True, verbose_name='인증 토큰')),
                ('expires_at', models.DateTimeField(verbose_name='만료일')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='처리일')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.socialprovider')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '소셜 계정 연동 요청',
                'verbose_name_plural': '소셜 계정 연동 요청들',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialAuthConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_create_user', models.BooleanField(default=True, help_text='새 소셜 계정으로 로그인 시 자동으로 사용자 생성', verbose_name='자동 사용자 생성')),
                ('require_email_verification', models.BooleanField(default=False, verbose_name='이메일 인증 필요')),
                ('allow_multiple_accounts', models.BooleanField(default=True, help_text='한 사용자가 여러 소셜 계정 연동 허용', verbose_name='다중 계정 허용')),
                ('sync_profile_data', models.BooleanField(default=True, verbose_name='프로필 데이터 동기화')),
                ('sync_on_login', models.BooleanField(default=True, verbose_name='로그인 시 동기화')),
                ('default_user_type', models.CharField(default='free', max_length=10, verbose_name='기본 사용자 유형')),
                ('required_scopes', models.TextField(blank=True, help_text='쉼표로 구분된 필수 권한 목록', verbose_name='필수 권한')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('provider', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.socialprovider')),
            ],
            options={
                'verbose_name': '소셜 인증 설정',
                'verbose_name_plural': '소셜 인증 설정들',
            },
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_id', models.CharField(max_length=255, verbose_name='소셜 ID')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='소셜 이메일')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='소셜 이름')),
                ('profile_image_url', models.URLField(blank=True, verbose_name='프로필 이미지 URL')),
                ('access_token', models.TextField(blank=True, verbose_name='액세스 토큰')),
                ('refresh_token', models.TextField(blank=True, verbose_name='리프레시 토큰')),
                ('token_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='토큰 만료일')),
                ('extra_data', models.JSONField(blank=True, default=dict, verbose_name='추가 데이터')),
                ('is_verified', models.BooleanField(default=False, verbose_name='인증 완료')),
                ('is_primary', models.BooleanField(default=False, verbose_name='주 계정')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('last_login_at', models.DateTimeField(blank=True, null=True, verbose_name='마지막 로그인')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.socialprovider')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '소셜 계정',
                'verbose_name_plural': '소셜 계정들',
                'ordering': ['-created_at'],
                'unique_together': {('provider', 'social_id')},
            },
        ),
    ]
